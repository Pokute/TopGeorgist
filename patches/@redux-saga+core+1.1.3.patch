diff --git a/node_modules/@redux-saga/core/dist/io-6de156f3.js b/node_modules/@redux-saga/core/dist/io-6de156f3.mjs
similarity index 100%
rename from node_modules/@redux-saga/core/dist/io-6de156f3.js
rename to node_modules/@redux-saga/core/dist/io-6de156f3.mjs
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-core.esm.js b/node_modules/@redux-saga/core/dist/redux-saga-core.esm.mjs
similarity index 99%
rename from node_modules/@redux-saga/core/dist/redux-saga-core.esm.js
rename to node_modules/@redux-saga/core/dist/redux-saga-core.esm.mjs
index b1a2663..b2763cc 100644
--- a/node_modules/@redux-saga/core/dist/redux-saga-core.esm.js
+++ b/node_modules/@redux-saga/core/dist/redux-saga-core.esm.mjs
@@ -3,8 +3,8 @@ export { CANCEL, SAGA_LOCATION } from '@redux-saga/symbols';
 import _extends from '@babel/runtime/helpers/esm/extends';
 import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';
 import { string as string$1, array as array$1, stringableFunc, func, symbol as symbol$1, buffer, notUndef, promise, iterator, undef, object, channel as channel$1 } from '@redux-saga/is';
-import { k as kTrue, e as expanding, c as check, o as once, r as remove, n as none, i as internalErr, T as TAKE, P as PUT, A as ALL, R as RACE, C as CALL, a as CPS, F as FORK, J as JOIN, b as CANCEL$1, S as SELECT, d as ACTION_CHANNEL, f as CANCELLED$1, g as FLUSH, G as GET_CONTEXT, h as SET_CONTEXT, j as getMetaInfo, l as createAllStyleChildCallbacks, m as createEmptyArray, p as assignWithSymbols, q as makeIterator, s as shouldComplete, t as noop, u as flatMap, v as getLocation, w as createSetContextWarning, x as asyncIteratorSymbol, y as shouldCancel, z as shouldTerminate, B as logError, D as wrapSagaDispatch, E as identity } from './io-6de156f3.js';
-export { H as buffers, I as detach } from './io-6de156f3.js';
+import { k as kTrue, e as expanding, c as check, o as once, r as remove, n as none, i as internalErr, T as TAKE, P as PUT, A as ALL, R as RACE, C as CALL, a as CPS, F as FORK, J as JOIN, b as CANCEL$1, S as SELECT, d as ACTION_CHANNEL, f as CANCELLED$1, g as FLUSH, G as GET_CONTEXT, h as SET_CONTEXT, j as getMetaInfo, l as createAllStyleChildCallbacks, m as createEmptyArray, p as assignWithSymbols, q as makeIterator, s as shouldComplete, t as noop, u as flatMap, v as getLocation, w as createSetContextWarning, x as asyncIteratorSymbol, y as shouldCancel, z as shouldTerminate, B as logError, D as wrapSagaDispatch, E as identity } from './io-6de156f3.mjs';
+export { H as buffers, I as detach } from './io-6de156f3.mjs';
 import { compose } from 'redux';
 import deferred from '@redux-saga/deferred';
 import '@redux-saga/delay-p';
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js b/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.mjs
similarity index 99%
rename from node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js
rename to node_modules/@redux-saga/core/dist/redux-saga-effects.esm.mjs
index eca8280..75f0906 100644
--- a/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js
+++ b/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.mjs
@@ -1,8 +1,8 @@
 import '@redux-saga/symbols';
 import '@babel/runtime/helpers/esm/extends';
 import { channel, stringableFunc, func, notUndef } from '@redux-saga/is';
-import { q as makeIterator, K as take, L as fork, M as cancel, N as call, O as actionChannel, Q as sliding, U as delay, V as race, c as check } from './io-6de156f3.js';
-export { O as actionChannel, _ as all, $ as apply, N as call, M as cancel, a4 as cancelled, a0 as cps, U as delay, W as effectTypes, a5 as flush, L as fork, a6 as getContext, a2 as join, Y as put, Z as putResolve, V as race, a3 as select, a7 as setContext, a1 as spawn, K as take, X as takeMaybe } from './io-6de156f3.js';
+import { q as makeIterator, K as take, L as fork, M as cancel, N as call, O as actionChannel, Q as sliding, U as delay, V as race, c as check } from './io-6de156f3.mjs';
+export { O as actionChannel, _ as all, $ as apply, N as call, M as cancel, a4 as cancelled, a0 as cps, U as delay, W as effectTypes, a5 as flush, L as fork, a6 as getContext, a2 as join, Y as put, Z as putResolve, V as race, a3 as select, a7 as setContext, a1 as spawn, K as take, X as takeMaybe } from './io-6de156f3.mjs';
 import '@redux-saga/delay-p';
 
 var done = function done(value) {
diff --git a/node_modules/@redux-saga/core/effects/package.json b/node_modules/@redux-saga/core/effects/package.json
index 2e08a22..0021b1a 100644
--- a/node_modules/@redux-saga/core/effects/package.json
+++ b/node_modules/@redux-saga/core/effects/package.json
@@ -2,7 +2,7 @@
   "name": "@redux-saga/core/effects",
   "private": true,
   "main": "../dist/redux-saga-effects.cjs.js",
-  "module": "../dist/redux-saga-effects.esm.js",
+  "module": "../dist/redux-saga-effects.esm.mjs",
   "types": "./effects.d.ts",
   "typesVersions": {
     ">=3.6": {
diff --git a/node_modules/@redux-saga/core/package.json b/node_modules/@redux-saga/core/package.json
index 3c676bb..213e83b 100644
--- a/node_modules/@redux-saga/core/package.json
+++ b/node_modules/@redux-saga/core/package.json
@@ -3,7 +3,18 @@
   "version": "1.1.3",
   "description": "Saga middleware for Redux to handle Side Effects",
   "main": "./dist/redux-saga-core.cjs.js",
-  "module": "./dist/redux-saga-core.esm.js",
+  "exports": {
+    ".": {
+      "require": "./dist/redux-saga-core.cjs.js",
+      "import": "./dist/redux-saga-core.esm.mjs"
+    },
+    "./effects": {
+      "require": "./dist/redux-saga-effects.cjs.js",
+      "import": "./dist/redux-saga-effects.esm.mjs"
+    }
+  },
+  "module": "./dist/redux-saga-core.esm.mjs",
+  "type": "module",
   "files": [
     "dist",
     "effects",
