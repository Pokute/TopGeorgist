diff --git a/node_modules/@redux-saga/core/dist/io-1d6eccda.js b/node_modules/@redux-saga/core/dist/io-1d6eccda.cjs
similarity index 100%
rename from node_modules/@redux-saga/core/dist/io-1d6eccda.js
rename to node_modules/@redux-saga/core/dist/io-1d6eccda.cjs
diff --git a/node_modules/@redux-saga/core/dist/io-6de156f3.js b/node_modules/@redux-saga/core/dist/io-6de156f3.mjs
similarity index 100%
rename from node_modules/@redux-saga/core/dist/io-6de156f3.js
rename to node_modules/@redux-saga/core/dist/io-6de156f3.mjs
diff --git a/node_modules/@redux-saga/core/dist/io-d7550be2.js b/node_modules/@redux-saga/core/dist/io-d7550be2.cjs
similarity index 100%
rename from node_modules/@redux-saga/core/dist/io-d7550be2.js
rename to node_modules/@redux-saga/core/dist/io-d7550be2.cjs
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-core.cjs b/node_modules/@redux-saga/core/dist/redux-saga-core.cjs
new file mode 100644
index 0000000..e2241d6
--- /dev/null
+++ b/node_modules/@redux-saga/core/dist/redux-saga-core.cjs
@@ -0,0 +1,7 @@
+"use strict";
+
+if (process.env.NODE_ENV === 'production') {
+  module.exports = require('./redux-saga-core.prod.cjs')
+} else {
+  module.exports = require('./redux-saga-core.dev.cjs')
+}
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-core.cjs.js b/node_modules/@redux-saga/core/dist/redux-saga-core.cjs.js
deleted file mode 100644
index c313b1b..0000000
--- a/node_modules/@redux-saga/core/dist/redux-saga-core.cjs.js
+++ /dev/null
@@ -1,7 +0,0 @@
-"use strict";
-
-if (process.env.NODE_ENV === 'production') {
-  module.exports = require('./redux-saga-core.prod.cjs.js')
-} else {
-  module.exports = require('./redux-saga-core.dev.cjs.js')
-}
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-core.dev.cjs.js b/node_modules/@redux-saga/core/dist/redux-saga-core.dev.cjs
similarity index 99%
rename from node_modules/@redux-saga/core/dist/redux-saga-core.dev.cjs.js
rename to node_modules/@redux-saga/core/dist/redux-saga-core.dev.cjs
index d6f5ca6..4f71aed 100644
--- a/node_modules/@redux-saga/core/dist/redux-saga-core.dev.cjs.js
+++ b/node_modules/@redux-saga/core/dist/redux-saga-core.dev.cjs
@@ -8,7 +8,7 @@ var symbols = require('@redux-saga/symbols');
 var _extends = _interopDefault(require('@babel/runtime/helpers/extends'));
 var _objectWithoutPropertiesLoose = _interopDefault(require('@babel/runtime/helpers/objectWithoutPropertiesLoose'));
 var is = require('@redux-saga/is');
-var io = require('./io-1d6eccda.js');
+var io = require('./io-1d6eccda.cjs');
 var redux = require('redux');
 var deferred = _interopDefault(require('@redux-saga/deferred'));
 require('@redux-saga/delay-p');
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-core.esm.js b/node_modules/@redux-saga/core/dist/redux-saga-core.esm.mjs
similarity index 99%
rename from node_modules/@redux-saga/core/dist/redux-saga-core.esm.js
rename to node_modules/@redux-saga/core/dist/redux-saga-core.esm.mjs
index b1a2663..b2763cc 100644
--- a/node_modules/@redux-saga/core/dist/redux-saga-core.esm.js
+++ b/node_modules/@redux-saga/core/dist/redux-saga-core.esm.mjs
@@ -3,8 +3,8 @@ export { CANCEL, SAGA_LOCATION } from '@redux-saga/symbols';
 import _extends from '@babel/runtime/helpers/esm/extends';
 import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';
 import { string as string$1, array as array$1, stringableFunc, func, symbol as symbol$1, buffer, notUndef, promise, iterator, undef, object, channel as channel$1 } from '@redux-saga/is';
-import { k as kTrue, e as expanding, c as check, o as once, r as remove, n as none, i as internalErr, T as TAKE, P as PUT, A as ALL, R as RACE, C as CALL, a as CPS, F as FORK, J as JOIN, b as CANCEL$1, S as SELECT, d as ACTION_CHANNEL, f as CANCELLED$1, g as FLUSH, G as GET_CONTEXT, h as SET_CONTEXT, j as getMetaInfo, l as createAllStyleChildCallbacks, m as createEmptyArray, p as assignWithSymbols, q as makeIterator, s as shouldComplete, t as noop, u as flatMap, v as getLocation, w as createSetContextWarning, x as asyncIteratorSymbol, y as shouldCancel, z as shouldTerminate, B as logError, D as wrapSagaDispatch, E as identity } from './io-6de156f3.js';
-export { H as buffers, I as detach } from './io-6de156f3.js';
+import { k as kTrue, e as expanding, c as check, o as once, r as remove, n as none, i as internalErr, T as TAKE, P as PUT, A as ALL, R as RACE, C as CALL, a as CPS, F as FORK, J as JOIN, b as CANCEL$1, S as SELECT, d as ACTION_CHANNEL, f as CANCELLED$1, g as FLUSH, G as GET_CONTEXT, h as SET_CONTEXT, j as getMetaInfo, l as createAllStyleChildCallbacks, m as createEmptyArray, p as assignWithSymbols, q as makeIterator, s as shouldComplete, t as noop, u as flatMap, v as getLocation, w as createSetContextWarning, x as asyncIteratorSymbol, y as shouldCancel, z as shouldTerminate, B as logError, D as wrapSagaDispatch, E as identity } from './io-6de156f3.mjs';
+export { H as buffers, I as detach } from './io-6de156f3.mjs';
 import { compose } from 'redux';
 import deferred from '@redux-saga/deferred';
 import '@redux-saga/delay-p';
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-core.prod.cjs.js b/node_modules/@redux-saga/core/dist/redux-saga-core.prod.cjs
similarity index 99%
rename from node_modules/@redux-saga/core/dist/redux-saga-core.prod.cjs.js
rename to node_modules/@redux-saga/core/dist/redux-saga-core.prod.cjs
index a3c1185..c7557da 100644
--- a/node_modules/@redux-saga/core/dist/redux-saga-core.prod.cjs.js
+++ b/node_modules/@redux-saga/core/dist/redux-saga-core.prod.cjs
@@ -8,7 +8,7 @@ var symbols = require('@redux-saga/symbols');
 var _extends = _interopDefault(require('@babel/runtime/helpers/extends'));
 var _objectWithoutPropertiesLoose = _interopDefault(require('@babel/runtime/helpers/objectWithoutPropertiesLoose'));
 var is = require('@redux-saga/is');
-var io = require('./io-d7550be2.js');
+var io = require('./io-d7550be2.cjs');
 var redux = require('redux');
 var deferred = _interopDefault(require('@redux-saga/deferred'));
 require('@redux-saga/delay-p');
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-effects.cjs b/node_modules/@redux-saga/core/dist/redux-saga-effects.cjs
new file mode 100644
index 0000000..565db44
--- /dev/null
+++ b/node_modules/@redux-saga/core/dist/redux-saga-effects.cjs
@@ -0,0 +1,7 @@
+"use strict";
+
+if (process.env.NODE_ENV === 'production') {
+  module.exports = require('./redux-saga-effects.prod.cjs')
+} else {
+  module.exports = require('./redux-saga-effects.dev.cjs')
+}
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-effects.cjs.js b/node_modules/@redux-saga/core/dist/redux-saga-effects.cjs.js
deleted file mode 100644
index 9303507..0000000
--- a/node_modules/@redux-saga/core/dist/redux-saga-effects.cjs.js
+++ /dev/null
@@ -1,7 +0,0 @@
-"use strict";
-
-if (process.env.NODE_ENV === 'production') {
-  module.exports = require('./redux-saga-effects.prod.cjs.js')
-} else {
-  module.exports = require('./redux-saga-effects.dev.cjs.js')
-}
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-effects.dev.cjs.js b/node_modules/@redux-saga/core/dist/redux-saga-effects.dev.cjs
similarity index 99%
rename from node_modules/@redux-saga/core/dist/redux-saga-effects.dev.cjs.js
rename to node_modules/@redux-saga/core/dist/redux-saga-effects.dev.cjs
index c721e3e..21c95f7 100644
--- a/node_modules/@redux-saga/core/dist/redux-saga-effects.dev.cjs.js
+++ b/node_modules/@redux-saga/core/dist/redux-saga-effects.dev.cjs
@@ -5,7 +5,7 @@ Object.defineProperty(exports, '__esModule', { value: true });
 require('@redux-saga/symbols');
 require('@babel/runtime/helpers/extends');
 var is = require('@redux-saga/is');
-var io = require('./io-1d6eccda.js');
+var io = require('./io-1d6eccda.cjs');
 require('@redux-saga/delay-p');
 
 var done = function done(value) {
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js b/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.mjs
similarity index 99%
rename from node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js
rename to node_modules/@redux-saga/core/dist/redux-saga-effects.esm.mjs
index eca8280..75f0906 100644
--- a/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js
+++ b/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.mjs
@@ -1,8 +1,8 @@
 import '@redux-saga/symbols';
 import '@babel/runtime/helpers/esm/extends';
 import { channel, stringableFunc, func, notUndef } from '@redux-saga/is';
-import { q as makeIterator, K as take, L as fork, M as cancel, N as call, O as actionChannel, Q as sliding, U as delay, V as race, c as check } from './io-6de156f3.js';
-export { O as actionChannel, _ as all, $ as apply, N as call, M as cancel, a4 as cancelled, a0 as cps, U as delay, W as effectTypes, a5 as flush, L as fork, a6 as getContext, a2 as join, Y as put, Z as putResolve, V as race, a3 as select, a7 as setContext, a1 as spawn, K as take, X as takeMaybe } from './io-6de156f3.js';
+import { q as makeIterator, K as take, L as fork, M as cancel, N as call, O as actionChannel, Q as sliding, U as delay, V as race, c as check } from './io-6de156f3.mjs';
+export { O as actionChannel, _ as all, $ as apply, N as call, M as cancel, a4 as cancelled, a0 as cps, U as delay, W as effectTypes, a5 as flush, L as fork, a6 as getContext, a2 as join, Y as put, Z as putResolve, V as race, a3 as select, a7 as setContext, a1 as spawn, K as take, X as takeMaybe } from './io-6de156f3.mjs';
 import '@redux-saga/delay-p';
 
 var done = function done(value) {
diff --git a/node_modules/@redux-saga/core/dist/redux-saga-effects.prod.cjs.js b/node_modules/@redux-saga/core/dist/redux-saga-effects.prod.cjs
similarity index 99%
rename from node_modules/@redux-saga/core/dist/redux-saga-effects.prod.cjs.js
rename to node_modules/@redux-saga/core/dist/redux-saga-effects.prod.cjs
index 962fc4e..ff063e0 100644
--- a/node_modules/@redux-saga/core/dist/redux-saga-effects.prod.cjs.js
+++ b/node_modules/@redux-saga/core/dist/redux-saga-effects.prod.cjs
@@ -5,7 +5,7 @@ Object.defineProperty(exports, '__esModule', { value: true });
 require('@redux-saga/symbols');
 require('@babel/runtime/helpers/extends');
 var is = require('@redux-saga/is');
-var io = require('./io-d7550be2.js');
+var io = require('./io-d7550be2.cjs');
 require('@redux-saga/delay-p');
 
 var done = function done(value) {
diff --git a/node_modules/@redux-saga/core/effects/package.json b/node_modules/@redux-saga/core/effects/package.json
index 2e08a22..accaf0d 100644
--- a/node_modules/@redux-saga/core/effects/package.json
+++ b/node_modules/@redux-saga/core/effects/package.json
@@ -1,8 +1,8 @@
 {
   "name": "@redux-saga/core/effects",
   "private": true,
-  "main": "../dist/redux-saga-effects.cjs.js",
-  "module": "../dist/redux-saga-effects.esm.js",
+  "main": "../dist/redux-saga-effects.cjs",
+  "module": "../dist/redux-saga-effects.esm.mjs",
   "types": "./effects.d.ts",
   "typesVersions": {
     ">=3.6": {
diff --git a/node_modules/@redux-saga/core/package.json b/node_modules/@redux-saga/core/package.json
index 3c676bb..70cea08 100644
--- a/node_modules/@redux-saga/core/package.json
+++ b/node_modules/@redux-saga/core/package.json
@@ -2,8 +2,19 @@
   "name": "@redux-saga/core",
   "version": "1.1.3",
   "description": "Saga middleware for Redux to handle Side Effects",
-  "main": "./dist/redux-saga-core.cjs.js",
-  "module": "./dist/redux-saga-core.esm.js",
+  "main": "./dist/redux-saga-core.cjs",
+  "exports": {
+    ".": {
+      "require": "./dist/redux-saga-core.cjs",
+      "import": "./dist/redux-saga-core.esm.mjs"
+    },
+    "./effects": {
+      "require": "./dist/redux-saga-effects.cjs",
+      "import": "./dist/redux-saga-effects.esm.mjs"
+    }
+  },
+  "module": "./dist/redux-saga-core.esm.mjs",
+  "type": "module",
   "files": [
     "dist",
     "effects",
